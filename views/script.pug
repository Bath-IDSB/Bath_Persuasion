extends ui_layout_no
  
block content

  //-Change this URI to a CDN you are using for Photos
  -var cdn = "";
  
  //.four.computer.only.tablet.only.four.wide.column
  //.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
  //#loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    //img.ui.centered.small.image(src='/public/heart.svg')
  #content.eight.wide.computer.eight.wide.tablet.sixteen.wide.mobile.column
    .ui.positive.message.hidden(id='alertMsg',createTime=user.createdAt.getTime(),style='position: fixed;left: 0px;right: 0px;top:6em;z-index:10')
          i.icon.close
          .content
            center.aligned.header Your session will expired soon!
            ul
              li You will be automatically redirected to the final survey.
              li Please complete the final survey to ensure you will be paid for your participation.

    //-if user.group == 'control'
      //.ui.info.message
        //i.icon.close
        .content
          center.aligned.header.center This is the #{user.group} group layout
    //-if user.group == 'consensus_lc'
      .ui.info.message
        i.icon.close
        .content
          center.aligned.header.center This is the #{user.group} group layout
    //-if user.group == 'consensus_hc'
      .ui.info.message
        i.icon.close
        .content
          center.aligned.header.center This is the #{user.group} group layout

    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"} 
        
        .ui.fluid.card(u_postID=val.id, type=u_class, postID=val.postID)
          //- This is a User made post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
            |  
            a.ui.avatar.image(href='/me')
              if user.profile.picture
                img(src='/user_post/'+user.profile.picture)
              else
                img(src=user.gravatar(60))
            a(href='/me')
              span=user.profile.name || user.username || user.id
          .image
            img(src='/user_post/'+val.picture)
          .content
            .description=val.body
          .two.ui.bottom.attached.icon.buttons
            .ui.reply.button(tabindex='0')
              i.reply.icon
              |  Reply
            if val.liked
              .ui.red.like.button
                i.heart.icon
                |  Like
            else
              .ui.like.button
                i.heart.icon
                |  Like
          if val.comments.length > 0
            .content
              .ui.comments
                each comment in val.comments
                  //-IF this comment is USER made, do this
                  if (user.createdAt.getTime() + comment.time) < Date.now()
                    if !comment.flagged
                      if comment.new_comment
                        -console.log("New COMMENT AREA");
                        .comment(commentID=comment.commentID)
                          a.avatar.image(href='/me')
                            if user.profile.picture
                              img(src='/user_post/'+user.profile.picture)
                            else
                              img(src=user.gravatar(60))
                          .content
                            a.author(href='/me')=user.profile.name || user.username || user.id
                            .metadata
                              span.date=(user.createdAt.getTime() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
                      //---[Else, script made comment]-------------------------------------------
                      else
                        .comment(commentID=comment.commentID)
                          a.avatar(href='/user/'+comment.actor.username)
                            //-img(src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
                            img.lazyload(data-src=cdn+"/profile_pictures/"+comment.actor.profile.picture)
                          .content
                            a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                            .metadata
                              span.date=(user.createdAt.getTime() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
          .extra.content
            .ui.fluid.left.labeled.right.icon.input
              .ui.label
                if user.profile.picture
                  img.ui.avatar.image(src='/user_post/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                else
                  img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
              input.newcomment(type='text', placeholder='Write a Comment')
              i.big.send.link.icon

      //-[Posts made by actors, not users]---------------------------------------------------------------------
      else if(val.class=="ads")
        .ui.fluid.card
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.time)
            |  
            //-a(href='/user/'+val.actor.username)
              //img.ui.avatar.image(src=cdn+'/profile_pictures/'+val.actor.profile.picture)
              //span=val.actor.profile.name
            ///a(href='/user/'+val.actor.username)     
              //img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+val.actor.profile.picture)
              span=val.actor.profile.name
          //-div(style="position: relative; z-index: 1;")
            img(src="image.png" style="position: absolute; z-index: 2;")
            span#overlay_text(style="position: relative; top: -10px; z-index: 3;") OVERLAY
          .img.post
            //-img.post(src="/"+val.picture)
            //img(src='/public/picture.svg', data-src="/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
            img.lazyload(data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
          .content
            .description=val.body

      else
        .ui.fluid.card.dim(postID=val.id, state=val.state || 'unread', type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)
          //- dimmer DIV for flagging
          .ui.dimmer.flag
                .content
                  .center
                    h2.ui.inverted.icon.header
                      i.red.flag.icon
                      |  You&apos;ve flagged this!
                      h3.ui.inverted.header
                        span="The admins will review this post further. We are sorry you had this experience."
          //- Normal Base Post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.time)
            |  
            //-a(href='/user/'+val.actor.username)
              img.ui.avatar.image(src=cdn+'/profile_pictures/'+val.actor.profile.picture)
              span=val.actor.profile.name
            a(href='/user/'+val.actor.username)     
              img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+val.actor.profile.picture)
              span=val.actor.profile.name
          //-div(style="position: relative; z-index: 1;")
            img(src="image.png" style="position: absolute; z-index: 2;")
            span#overlay_text(style="position: relative; top: -10px; z-index: 3;") OVERLAY
          .img.post
            //-img.post(src="/"+val.picture)
            //img(src='/public/picture.svg', data-src="/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
            img.lazyload(data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
          .content
            .description=val.body
          case user.group
            when 'control' 
              .three.ui.bottom.attached.icon.buttons
                .ui.reply.button(tabindex='0')
                  i.reply.icon
                  |  Reply
                .ui.flag.button(tabindex='0')
                  i.flag.outline.large.icon
                  |  Flag
                if val.like
                  .ui.labeled.button(tabindex='0')
                    .ui.green.like.button
                      i.thumbs.outline.up.large.icon
                      |  Like
                    a.ui.basic.green.left.pointing.label.count=val.likes
                else
                  .ui.labeled.button(tabindex='0')
                    .ui.like.button
                      i.thumbs.outline.up.large.icon
                      |  Like
                    a.ui.basic.green.left.pointing.label.count=val.likes
            when 'consensus_lc'
              .three.ui.bottom.attached.icon.buttons        
                .ui.flag.button(tabindex='0',data-content="Flag", data-variation="tiny")
                  i.flag.large.outline.icon
                if val.dislike
                  .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                    .ui.red.dislike.button
                      i.thumbs.down.large.outline.icon
                    a.ui.basic.red.left.pointing.label.count=val.dislikes_lc
                else 
                  if val.like
                    .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                      .ui.dislike.button.disabled
                        i.thumbs.down.large.outline.icon
                      a.ui.basic.red.left.pointing.label.count=val.dislikes_lc
                  else
                    .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                      .ui.dislike.button
                        i.thumbs.down.large.outline.icon
                      a.ui.basic.red.left.pointing.label.count=val.dislikes_lc
                if val.like
                  .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                    .ui.green.like.button
                      i.thumbs.up.large.outline.icon
                    a.ui.basic.green.left.pointing.label.count=val.likes
                else
                  if val.dislike 
                    .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                      .ui.like.button.disabled
                        i.thumbs.up.large.outline.icon
                      a.ui.basic.green.left.pointing.label.count=val.likes
                  else
                    .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                      .ui.like.button
                        i.thumbs.up.large.outline.icon
                      a.ui.basic.green.left.pointing.label.count=val.likes
            when 'consensus_hc'
              .three.ui.bottom.attached.icon.buttons        
                .ui.flag.button(tabindex='0',data-content="Flag", data-variation="tiny")
                  i.flag.large.outline.icon
                if val.dislike
                  .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                    .ui.red.dislike.button
                      i.thumbs.down.large.outline.icon
                    a.ui.basic.red.left.pointing.label.count=val.dislikes_hc
                else 
                  if val.like
                    .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                      .ui.dislike.button.disabled
                        i.thumbs.down.large.outline.icon
                      a.ui.basic.red.left.pointing.label.count=val.dislikes_hc
                  else
                    .ui.labeled.button(tabindex='0',data-content="Dislike", data-variation="tiny") 
                      .ui.dislike.button
                        i.thumbs.down.large.outline.icon
                      a.ui.basic.red.left.pointing.label.count=val.dislikes_hc
                if val.like
                  .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                    .ui.green.like.button
                      i.thumbs.up.large.outline.icon
                    a.ui.basic.green.left.pointing.label.count=val.likes
                else
                  if val.dislike 
                    .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                      .ui.like.button.disabled
                        i.thumbs.up.large.outline.icon
                      a.ui.basic.green.left.pointing.label.count=val.likes
                  else
                    .ui.labeled.button(tabindex='0',data-content="Like", data-variation="tiny")
                      .ui.like.button
                        i.thumbs.up.large.outline.icon
                      a.ui.basic.green.left.pointing.label.count=val.likes

          if val.comments.length > 0
            .content
              .ui.comments
                each comment in val.comments
                  //-[If comments made by the user, do the following]-----------------------------------------
                  if (user.createdAt.getTime() + comment.time) < Date.now()
                    if comment.new_comment
                      -console.log("New COMMENT AREA");
                      .comment(commentID=comment.new_comment_id)
                        a.avatar.image(href='/me')
                          if user.profile.picture
                            img(src='/user_post/'+user.profile.picture)
                          else
                            img(src=user.gravatar(60))
                        .content
                          a.author(href='/me')=user.profile.name || user.username || user.id
                          .metadata
                            span.date=(user.createdAt.getTime() + comment.time)
                            .rating
                              i.heart.icon
                              span.num=0
                              |  Likes
                          .text=comment.body
                          //.actions
                            //a.like.comment Like
                            //a.flag.comment Flag
                    //-[Else this is a script made comment]-------------------------------------------------
                    else
                      .comment(commentID=comment.id)
                        a.avatar(href='/user/'+comment.actor.username)
                          //-img(src=cdn+'/profile_pictures/'+comment.actor.profile.picture)                       
                          img.lazyload(data-src=cdn+"/profile_pictures/"+comment.actor.profile.picture)
                        .content
                          a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                          .metadata
                            span.date=(user.createdAt.getTime() + comment.time)
                            .rating
                              if comment.liked
                                i.red.heart.icon
                                span.num=comment.likes
                                |  Likes 
                              else
                                i.heart.icon
                                span.num=comment.likes
                                |  Likes
                          .text=comment.body
                          .actions
                            if comment.liked
                              a.red.like.comment Like
                            else
                              a.like.comment Like
                            a.flag.comment Flag
          .extra.content
            .ui.fluid.left.labeled.right.icon.input
              .ui.label
                if user.profile.picture
                  img.ui.avatar.image(src='/user_post/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                else
                  img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
              input.newcomment(type='text', placeholder='Write a Comment')
              i.big.send.link.icon

    .ui.fluid.card
      .description
        center.aligned.header End of Posts for the last 48 hours.
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    .ui.tiny.post.modal()
      i.close.icon
      .header Add a New Post
      .content
        form#postform.ui.feed.form(action='/post/new', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          .field
            textarea(rows='2', placeholder='Share your meal', name='body')
          .field.image-upload
            label(for='picinput')
              .image.content
                img#imgInp.ui.fluid.image(src='/public/photo-camera.svg')
            //-input#picinput(type='file', accept='image/*', capture='camera', name='picinput')
            input#picinput(type='file', accept='image/*', name='picinput')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', name="foo", value='Submit', form='postform')